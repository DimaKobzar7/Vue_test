@import "../../assets/mixins";

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Grtsk Giga";
  font-weight: 600;
  overflow: hidden;
}

.section {
  background-color: #bebebe;
}

.container {
  margin: 0 auto;
  padding: 0 16px;
  max-width: 1440px;

  @include onTablet {
    padding: 0 24px;
  }
}

.hamburger-menu {
  visibility: visible;

  @include onTablet {
    visibility: hidden;
  }
}

// tests
:root {
  // 05 чтобы стояло по центру при умножении так как в примере 200 ширина то при умножении 200* 0.5 будет 100
  // но у меня такое не работате так как у меня текст и он стартует с левого верхнего края
  // он центрируется через трансформ но я не могу его использовать так как он используется для анимации
  --x: 0.5;
  --y: 0.5;
  // --x: 0;
  // --y: 0;
}

.tracker {
  // width: 10px;
  // height: 10px;
  // left: 0;
  // top: 0;
  // background: red;
  // border-radius: 1000px;
  // transform: translate(
  //   calc(-50% + 200px * var(--x)),
  //   calc(-50% + 200px * var(--y))
  // );

  // пиксели нужны так как чем их больше тем дальше текст двигается и преврашает
  // вар переменные в пиксели но это ломает стартовое расположение текста
  // отрицатеьные пиксели ставить нельзя иначе текст следует не за пикурсором
  // а от него
  // возможно следует сделать текст изначально кривым и чтобы строки внизу его выравнивали
  // текст плохо вверх подымается почти не подымается а вниз идет нормально
  // и влево почти не двигается это наверное из за того что 30 пикселей стоит
  // transform: translate(calc(30px * var(--x)), calc(30px * var(--y)));
  // transform: translate(calc(284px * var(--x)), calc(242.5px * var(--y)));
  // transform: translate(calc(142px * var(--x)), calc(121.25px * var(--y)));
  // transform: translate(calc(71px * var(--x)), calc(60.625px * var(--y)));

  // transform: translate(calc(50px * var(--x)), calc(60.625px * var(--y)));
  transform: translate(
    calc(-8% + 50px * var(--x)),
    calc(40% + 50px * var(--y))
  );
  transition: transform 0.1s;
  // @media (min-width: 405px) {
  //   // transform: translate(calc(71px * var(--x)), calc(60.625px * var(--y)));
  //   transform: translate(
  //     calc(-12% + 80px * var(--x)),
  //     calc(25% + 80px * var(--y))
  //   );
  // }

  @include onTablet {
    // transform: translate(calc(142px * var(--x)), calc(121.25px * var(--y)));
    // transform: translate(calc(100px * var(--x)), calc(121.25px * var(--y)));
    transform: translate(
      calc(-7% + 80px * var(--x)),
      calc(25% + 120px * var(--y))
    );
  }

  @include onDesktop {
    // transform: translate(calc(142px * var(--x)), calc(121.25px * var(--y)));
    // transform: translate(calc(100px * var(--x)), calc(121.25px * var(--y)));
    transform: translate(
      calc(-5% + 80px * var(--x)),
      calc(50% + 160px * var(--y))
    );
  }

  @include onWideDesktop {
    transform: translate(
      calc(-4% + 80px * var(--x)),
      calc(50% + 160px * var(--y))
    );
  }
}
